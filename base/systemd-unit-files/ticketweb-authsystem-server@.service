[Unit]
Description=gunicorn daemon
After=network.target

[Service]
Type = simple
# The example https://docs.gunicorn.org/en/stable/deploy.html
# says to use Type=notify but that causes 
# systemctl start gunicorn
# to hang. OTOH that web page has a complete setup for
# socket activation. Type=notify may be appropriate in that case
# (I wouldn't know)

# the specific user that our service will run as
User=ticketweb_authsystem
Group=ticketweb_authsystem



# another option for an even more restricted service is
# DynamicUser=yes
# see http://0pointer.net/blog/dynamic-users-with-systemd.html



RuntimeDirectory=ticketweb/%i/authsystem

# This translates in practice to /run/web-project-preivew/token-server.


# WorkingDirectory=gunicorn
# Don't know what this is by default, but it doesn't matter. No directories are
# refered to in the code so it makes no difference



ExecStart=/usr/local/bin/ticketweb-authsystem-server %f




# This is different from the example at 
# https://docs.gunicorn.org/en/stable/deploy.html
# which is /usr/bin/gunicorn applicationname.wsgi.
# I don't really understand what a wsgi file is but I am setting things up described
# in the documentation of Falcon API, which is my reason for running gunicorn anyway

ExecReload=/bin/kill -s HUP $MAINPID
KillMode=mixed
TimeoutStopSec=5


PrivateTmp=true
# StandardOutput=append:/opt/web-project-venvs/final/var/log/web-project/token-server/token-server.log


[Install]
WantedBy=multi-user.target

